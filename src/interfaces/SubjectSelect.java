/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import dbconnection.DBConnect;
import java.awt.Color;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import operations.Person;


/**
 *
 * @author Dinet
 */
public class SubjectSelect extends javax.swing.JFrame {

    private Connection conn;
    private Statement stmt;
    private ResultSet rs;
    private String role1,role2,username,name;
    private int id,age;

    public void setAge(int age) {
        this.age = age;
    }


    public void setId(int id) {
        this.id = id;
    }

    public void setName(String name) {
        this.name = name;
    }


    public void setRole1(String role1) {
        this.role1 = role1;
    }

    public void setRole2(String role2) {
        this.role2 = role2;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public SubjectSelect() {
        initComponents();
        this.setLocationRelativeTo(null);
        selectSubjectBtn.setVisible(false);
        updateSubjectBtn.setVisible(false);
        jLabel2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        updateSubjectBtn = new javax.swing.JButton();
        selectSubjectBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        profileName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jButton5.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 14)); // NOI18N
        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        subjectTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null},
                        {null, null, null},
                        {null, null, null}
                },
                new String [] {
                        "Subject Code", "Subject Name", "Enroll"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                    false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(subjectTable);
        if (subjectTable.getColumnModel().getColumnCount() > 0) {
            subjectTable.getColumnModel().getColumn(0).setResizable(false);
            subjectTable.getColumnModel().getColumn(1).setResizable(false);
            subjectTable.getColumnModel().getColumn(2).setResizable(false);
        }

        updateSubjectBtn.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 24)); // NOI18N
        updateSubjectBtn.setText("update Subjects");
        updateSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSubjectBtnActionPerformed(evt);
            }
        });

        selectSubjectBtn.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 24)); // NOI18N
        selectSubjectBtn.setText("Confirm Subjects");
        selectSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectSubjectBtnActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 51, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/Images/Webp.net-resizeimage.png"))); // NOI18N
        jLabel1.setText("Select Subjects");

        profileName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        profileName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/Images/top.png"))); // NOI18N
        profileName.setText("Sign in as");

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText("Sign out");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(profileName, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel2)
                                                .addContainerGap())
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(145, 145, 145))))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(profileName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator1)
                                .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(updateSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(selectSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(46, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(updateSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(selectSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void selectSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {
        int response=JOptionPane.showConfirmDialog(null,"Confirm to Select Subjects");
        if(response==JOptionPane.YES_OPTION){
            Person person=new Person();
            int id=person.takeID(username, role1);
            selectSubject(id);
            this.dispose();
            new Home().setVisible(true);
        }

    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
        Profile profile=new Profile();
        profile.setRole1(role1);
        profile.setRole2(role2);
        profile.setId(id);
        profile.setName(name);
        profile.setUsername(username);
        profile.setAge(age);
        try {
            profile.showDetails();
        } catch (SQLException ex) {
            Logger.getLogger(SubjectSelect.class.getName()).log(Level.SEVERE, null, ex);
        }


    }

    private void updateSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {
        int response=JOptionPane.showConfirmDialog(null,"Confirm to Upadate Subjects");
        if(response==JOptionPane.YES_OPTION){
            deleteSubject();
            selectSubject(id);
            Profile profile=new Profile();
            profile.setId(id);
            profile.setName(name);
            profile.setRole1(role1);
            profile.setRole2(role2);
            profile.setAge(age);
            this.dispose();
            try {
                profile.showDetails();
            } catch (SQLException ex) {
                Logger.getLogger(SubjectSelect.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {
        Home home=new Home();
        this.dispose();
        home.setVisible(true);
    }

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {
        jLabel2.setForeground(Color.BLACK);
        jLabel2.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }


    public void showSelectSubject() throws SQLException, ClassNotFoundException{

        profileName.setText("Register as "+name);
        jLabel2.setVisible(true);
        this.setVisible(true);
        selectSubjectBtn.setVisible(true);
        selectSubjectBtn.setLocation(375,547);
        DefaultTableModel model = new DefaultTableModel(){
            public boolean isCellEditable(int row, int col)
            { switch(col){
                case 0:
                    return false;
                case 1:
                    return false;
                case 2:
                    return true;
                default:
                    return false;
            } }
            public Class<?> getColumnClass(int column){
                switch(column){
                    case 0:
                        return String.class;
                    case 1:
                        return String.class;
                    case 2:
                        return Boolean.class;
                    default:
                        return String.class;
                }

            }
        };
        model.addColumn("Subject Code");
        model.addColumn("Subject Name");
        model.addColumn("Enroll");
        DBConnect dbConnect=new DBConnect();
        conn=dbConnect.getConnection();
        stmt=conn.createStatement();
        String sqlQuery = "SELECT * FROM subject";
        rs=stmt.executeQuery(sqlQuery);
        while (rs.next()) {
            String subject_code = rs.getString("subject_code");
            String subject_name = rs.getString("subject_name");
            boolean selection=false;
            model.addRow(new Object[]{subject_code,subject_name,selection});
        }
        dbConnect.closeConnection(rs,conn);
        subjectTable.setModel(model);
        subjectTable.setRowHeight(30);

    }
    public void showUpdateSubject() throws SQLException, ClassNotFoundException{

        this.showSelectSubject();
        updateSubjectBtn.setVisible(true);
        selectSubjectBtn.hide();
        updateSubjectBtn.setLocation(375,547);




        try {
            DBConnect dbConnect = new DBConnect();
            conn = dbConnect.getConnection();
            stmt = conn.createStatement();
            String sql = "SELECT subject_subject_id FROM " + role2 + " WHERE "+role1+"_"+role1+"_id=" + id;
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                int subject_id = rs.getInt("subject_subject_id");
                subjectTable.setValueAt(true, subject_id-1, 2);

            }
            rs.close();
            stmt.close();
            conn.close();
        } catch (ClassNotFoundException b) {
            b.printStackTrace();
        } catch (SQLException b) {
            b.printStackTrace();
        }
        this.profileName.setText("Sign in as "+name);


    }
    public void selectSubject(int id){
        Boolean checked = null;
        int count=0;

        for(int i=0;i<subjectTable.getRowCount();i++)
        {
            checked=Boolean.valueOf(subjectTable.getValueAt(i, 2).toString());


            if(checked)
            {
                try {
                    DBConnect dbConnect = new DBConnect();
                    conn = dbConnect.getConnection();
                    stmt = conn.createStatement();
                    String sql = "INSERT INTO " + role2 + " VALUES (" + id + "," + (i + 1) + ")";
                    stmt.executeUpdate(sql);
                    stmt.close();
                    conn.close();
                } catch (ClassNotFoundException | SQLException b) {
                }
                count++;
            }



        }
        if(count>0)
        {
            JOptionPane.showMessageDialog(null,"Subjects Selected Successfully");
            this.dispose();
        }
        else{
            JOptionPane.showMessageDialog(null,"Please Select a Subject!!!");
        }

    }
    public void deleteSubject(){


        try {
            DBConnect dbConnect = new DBConnect();
            conn = dbConnect.getConnection();
            stmt = conn.createStatement();
            String sql = "DELETE FROM " + role2 + " WHERE "+role1+"_"+role1+"_id=" + id;
            stmt.executeUpdate(sql);
            stmt.close();
            conn.close();

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(SubjectSelect.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel profileName;
    private javax.swing.JButton selectSubjectBtn;
    private javax.swing.JTable subjectTable;
    private javax.swing.JButton updateSubjectBtn;
    // End of variables declaration
}
